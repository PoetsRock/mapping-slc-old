"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mean",applicationModuleVendorDependencies=["ngResource","ngAnimate","ngTouch","ngSanitize","ngMessages","ngCookies","ui.router","ui.bootstrap","ui.utils","ngCkeditor","bootstrapLightbox","cgNotify"],registerModule=function(moduleName,dependencies){console.log("module registration -- right here, baby..."),console.log("moduleName:::::::::::::::::::::::::::::::::::::::::::"),console.log(moduleName),console.log("dependencies:::::::::::::::::::::::::::::::::::::::::::"),console.log(dependencies),console.log("::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"),angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider","$httpProvider",function($locationProvider,$httpProvider){$locationProvider.html5Mode(!0).hashPrefix("!"),$httpProvider.interceptors.push("authInterceptor")}]),angular.module(ApplicationConfiguration.applicationModuleName).run(["$rootScope","$state","Authentication",function($rootScope,$state,Authentication){function storePreviousState(state,params){state.data&&state.data.ignoreState||($state.previous={state:state,params:params,href:$state.href(state,params)})}$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){if(toState.data&&toState.data.roles&&toState.data.roles.length>0){var allowed=!1;toState.data.roles.forEach(function(role){return void 0!==Authentication.user.roles&&-1!==Authentication.user.roles.indexOf(role)?(allowed=!0,!0):void 0}),allowed||(event.preventDefault(),void 0!==Authentication.user&&"object"==typeof Authentication.user?$state.go("forbidden"):$state.go("authentication.signin").then(function(){storePreviousState(toState,toParams)}))}}),$rootScope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState,fromParams){storePreviousState(fromState,fromParams)})}]),angular.element(document).ready(function(){if(window.location.hash&&"#_=_"===window.location.hash)if(window.history&&history.pushState)window.history.pushState("",document.title,window.location.pathname);else{var scroll={top:document.body.scrollTop,left:document.body.scrollLeft};window.location.hash="",document.body.scrollTop=scroll.top,document.body.scrollLeft=scroll.left}angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("users",["core"]),angular.module("core").config(["$compileProvider",function($compileProvider){$compileProvider.debugInfoEnabled(!1)}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise(function($injector,$location){$injector.get("$state").transitionTo("not-found",null,{location:!1})}),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/client/views/home.client.view.html"}).state("not-found",{url:"/not-found",templateUrl:"modules/core/client/views/404.client.view.html",data:{ignoreState:!0}}).state("bad-request",{url:"/bad-request",templateUrl:"modules/core/client/views/400.client.view.html",data:{ignoreState:!0}}).state("forbidden",{url:"/forbidden",templateUrl:"modules/core/client/views/403.client.view.html",data:{ignoreState:!0}}).state("subscribeForm",{url:"/subscribe-form",templateUrl:"modules/core/views/subscribe-form.client.view.html"}).state("uploads",{url:"/uploads",templateUrl:"modules/core/views/file-upload.client.view.html"}).state("uploadFile",{url:"/uploads/:fileHash"})}]),angular.module("core").controller("RandomMapController",["$scope","RandomMapService",function($scope,RandomMapService){$scope.staticMap=RandomMapService.getRandomMap(),$scope.myFunction=function(){console.log("error loading that map!")}}]),angular.module("core").controller("HeaderController",["$scope","$state","Authentication","Menus",function($scope,$state,Authentication,Menus){$scope.$state=$state,$scope.authentication=Authentication,$scope.menu=Menus.getMenu("topbar"),$scope.isCollapsed=!1,$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication","$http","MarkerDataService","mapService","AdminAuthService","$rootScope","$location","$sce","UtilsService",function($scope,Authentication,$http,MarkerDataService,mapService,AdminAuthService,$rootScope,$location,$sce,UtilsService){$scope.authentication=Authentication,$scope.isAdmin=AdminAuthService,console.log("current user:\n",$scope.authentication.user),$scope.featuredProjects={},UtilsService.cssLayout(),$scope.trustAsHtml=$sce.trustAsHtml,$scope.goToProject=function(id){$location.path("projects/"+id)},$scope.photo0="chris--bw-2.jpg",$scope.photo1="as_thumb_150.jpg",$scope.photo2="wli_thumb_150.jpg",$scope.photo3="dw_thumb_150.jpg",$scope.photo4="as_thumb_bw.png",$scope.projectMarker=null,$scope.markerData=null,$scope.overlayActive=!0,$scope.menuOpen=!1,$scope.shadeMap=!1,$scope.toggleTest=function(){$scope.shadeMap=!$scope.shadeMap,console.log("$scope.shadeMap: ",$scope.shadeMap)},$scope.toggleOverlayFunction=function(source){$scope.overlayActive&&"overlay"===source?($scope.overlayActive=!$scope.overlayActive,$scope.shadeMap=!0):$scope.overlayActive&&"menu-closed"===source?($scope.overlayActive=!1,$scope.menuOpen=!0,$scope.shadeMap=!0):$scope.overlayActive||"menu-closed"!==source||$scope.menuOpen?$scope.overlayActive||"home"!==source||($scope.menuOpen=!1,$scope.overlayActive=!0,$scope.shadeMap=!1):($scope.menuOpen=!$scope.menuOpen,$scope.shadeMap=!1)},$scope.attributionFull=!1,$scope.attributionText='<div style="padding: 0 5px 0 2px"><a href="http://www.mapbox.com/about/maps/" target="_blank">Mapbox</a> & <a href="http://leafletjs.com/" target="_blank">Leaflet</a>, with map data by <a href="http://openstreetmap.org/copyright">OpenStreetMapÂ©</a> | <a href="http://mapbox.com/map-feedback/" class="mapbox-improve-map">Improve this map</a></div>',$scope.markers=!0,$scope.filters=!0,$scope.censusDataTractLayer=!0,$scope.googlePlacesLayer=!1,$scope.sidebarToggle=!1;var popupIndex=0,mapFunction=function(){L.mapbox.accessToken="pk.eyJ1IjoicG9ldHNyb2NrIiwiYSI6Imc1b245cjAifQ.vwb579x58Ma-CcnfQNamiw";var map=(document.getElementById("info"),L.mapbox.map("map",null,{infoControl:!1,attributionControl:!1}).setView([40.7630772,-111.8689467],12).addControl(L.mapbox.geocoderControl("mapbox.places",{position:"topright"})).addControl(L.control.zoom({position:"topright"}))),grayMap=L.mapbox.tileLayer("poetsrock.b06189bb"),mainMap=L.mapbox.tileLayer("poetsrock.la999il2"),topoMap=L.mapbox.tileLayer("poetsrock.la97f747"),greenMap=L.mapbox.tileLayer("poetsrock.jdgpalp2"),landscape=L.tileLayer("http://{s}.tile.thunderforest.com/landscape/{z}/{x}/{y}.png"),comic=L.mapbox.tileLayer("poetsrock.23d30eb5"),watercolor=L.tileLayer("https://stamen-tiles-{s}.a.ssl.fastly.net/watercolor/{z}/{x}/{y}.png"),layers={"Main Map":mainMap,"Topo Map":topoMap,"Green Map":greenMap,Landscape:landscape,"Comically Yours":comic,"Gray Day":grayMap,Watercolor:watercolor};mainMap.addTo(map),L.control.layers(layers).addTo(map),$scope.addProjectMarkers=function(markerData){$scope.markerData=markerData;var index=0;for(var prop in markerData)$scope.projectMarker=L.mapbox.featureLayer({type:"Feature",geometry:{type:"Point",coordinates:[markerData[prop].lng,markerData[prop].lat]},properties:{"marker-size":"large","marker-color":mapService.markerColorFn(markerData,prop),"marker-symbol":"heart",projectId:markerData[prop]._id,summary:markerData[prop].storySummary,title:markerData[prop].title,mainImage:markerData[prop].mainImage,category:markerData[prop].category,mapImage:markerData[prop].mapImage,lat:markerData[prop].lat,lng:markerData[prop].lng,published:markerData[prop].created,leafletId:null,arrayIndexId:index}}).on("click",function(e){return $scope.$apply(function(){$scope.storyEvent=e.target._geojson.properties}),map.panTo(e.layer.getLatLng()),popupMenuToggle(e),$scope.projectMarker[prop]}),$scope.projectMarker.addTo(map),$scope.markerArray.push($scope.projectMarker),index++;return $scope.markerArray};new L.Point(30,-16);$scope.toggleGooglePlacesData=function(){$scope.googlePlacesLayer?map.removeLayer(googlePlacesMarkerLayer):map.addLayer(googlePlacesMarkerLayer)},map.on("click",function(e){$scope.menuOpen?($scope.sidebar.close(),$scope.shadeMap=!1):(console.log("map click!"),$scope.overlayActive=!1)}),$scope.getProjectMarkers=function(markerData){}};mapFunction();var popupMenuToggle=function(e){$scope.menuOpen||popupIndex===e.target._leaflet_id?($scope.menuOpen||popupIndex!==e.target._leaflet_id)&&($scope.menuOpen&&popupIndex!==e.target._leaflet_id?($scope.sidebar.open("details"),popupIndex=e.target._leaflet_id):$scope.menuOpen&&popupIndex===e.target._leaflet_id&&($scope.sidebar.close(),popupIndex=0)):($scope.toggleOverlayFunction("menu-closed"),$scope.sidebar.open("details"),popupIndex=e.target._leaflet_id)}}]),angular.module("core").controller("ModalController",["$scope","$uibModalInstance","items",function($scope,$uibModalInstance,items){$scope.items=items,$scope.selected={item:$scope.items[0],toStateUrl:items.toStateUrl},console.log("$scope.selected",$scope.selected),$scope.selected.item?(console.log("$scope.selected.item",$scope.selected.item),$scope.ok=function(){$uibModalInstance.close($scope.selected.item)}):(console.log("$scope.selected.toStateName",$scope.selected.toStateUrl),$scope.ok=function(){$uibModalInstance.close($scope.selected.toStateUrl)}),$scope.cancel=function(){$uibModalInstance.dismiss("user cancelled modal")}}]),angular.module("core").directive("featuredProjects",function(){return{restrict:"E",templateUrl:"/modules/core/client/directives/views/featured-projects.html"}}),angular.module("core").directive("footerDirective",["UtilsService",function(UtilsService){return{restrict:"AE",priority:0,templateUrl:"/modules/core/client/directives/views/footer-directive.html",controller:["$scope","$http",function($scope,$http){UtilsService.cssLayout()}]}}]),angular.module("core").directive("randomMapDirective",[function($scope){var maps={originalMap:"poetsrock.55znsh8b",grayMap:"poetsrock.b06189bb",mainMap:"poetsrock.la999il2",topoMap:"poetsrock.la97f747",greenMap:"poetsrock.jdgpalp2",funkyMap:"poetsrock.23d30eb5"};[maps.originalMap,maps.grayMap,maps.mainMap,maps.topoMap,maps.greenMap,maps.funkyMap];return{template:"<div></div>",restrict:"EA",link:function(scope,element,attrs){}}}]),angular.module("core").directive("mainMenu",["AdminAuthService",function(AdminAuthService){return{restrict:"EA",templateUrl:"/modules/core/client/directives/views/main-menu.html",controller:["$scope",function($scope){$scope.isAdmin=AdminAuthService.user,$scope.sidebar=L.control.sidebar("sidebar",{closeButton:!0,position:"left"}).addTo(map),$scope.sidebar.click=function(){L.DomUtil.hasClass(this,"active")?($scope.sidebar.close(),console.log("here i am close")):($scope.sidebar.open(this.firstChild.hash.slice(1)),console.log("here i am open"))}}],link:function($scope){}}}]),angular.module("core").directive("mainPageOverlay",function(){return{restrict:"AE",priority:10,templateUrl:"/modules/core/client/directives/views/main-page-overlay.html"}}),angular.module("core").directive("modalDirective",function(){return{restrict:"E",link:function(){$uibModal.open({animation:!0,templateUrl:template,controller:function($scope,$modalInstance,$location){$scope.stay=function(result){console.log("stay just a little bit longer, oh won't you stay"),$modalInstance.close(function(result){console.log("result: ",result)})},$scope.leave=function(){$scope.stay(),$location.path(toState)}},size:"lg"})}}}),angular.module("core").directive("secondaryMenuDirective",function(){return{restrict:"E",templateUrl:"/modules/core/client/directives/views/secondary-menu-directive.html",controller:["AdminAuthService","$scope",function(AdminAuthService,$scope){$scope.isAdmin=AdminAuthService}],link:function(scope){scope.secondMenuOpened=!1,scope.toggleSecondMenu=!1}}}),angular.module("core").directive("secondaryPageDirective",function(){return{restrict:"AE",priority:0,templateUrl:"/modules/core/client/directives/views/secondary-page.html"}}),angular.module("core").directive("showErrors",["$timeout","$interpolate",function($timeout,$interpolate){var linkFn=function(scope,el,attrs,formCtrl){var inputEl,inputName,inputNgEl,options,showSuccess,toggleClasses,initCheck=!1,showValidationMessages=!1;if(options=scope.$eval(attrs.showErrors)||{},showSuccess=options.showSuccess||!1,inputEl=el[0].querySelector(".form-control[name]")||el[0].querySelector("[name]"),inputNgEl=angular.element(inputEl),inputName=$interpolate(inputNgEl.attr("name")||"")(scope),!inputName)throw"show-errors element has no child input elements with a 'name' attribute class";var reset=function(){return $timeout(function(){el.removeClass("has-error"),el.removeClass("has-success"),showValidationMessages=!1},0,!1)};scope.$watch(function(){return formCtrl[inputName]&&formCtrl[inputName].$invalid},function(invalid){return toggleClasses(invalid)}),scope.$on("show-errors-check-validity",function(event,name){return angular.isUndefined(name)||formCtrl.$name===name?(initCheck=!0,showValidationMessages=!0,toggleClasses(formCtrl[inputName].$invalid)):void 0}),scope.$on("show-errors-reset",function(event,name){return angular.isUndefined(name)||formCtrl.$name===name?reset():void 0}),toggleClasses=function(invalid){return el.toggleClass("has-error",showValidationMessages&&invalid),showSuccess?el.toggleClass("has-success",showValidationMessages&&!invalid):void 0}};return{restrict:"A",require:"^form",compile:function(elem,attrs){if(-1===attrs.showErrors.indexOf("skipFormGroupCheck")&&!elem.hasClass("form-group")&&!elem.hasClass("input-group"))throw"show-errors element does not have the 'form-group' or 'input-group' class";return linkFn}}}]),angular.module("core").directive("signInDirective",function(){return{restrict:"EA",templateUrl:"/modules/core/client/directives/views/sign-in-directive.html",controller:["$scope","$http","Authentication",function($scope,$http,Authentication){return $scope.user=Authentication.user,""===$scope.user?void console.log("directive profilePic Service - calling nothing, just `return`"):void("default.png"===Authentication.user.profileImageFileName||""===Authentication.user.profileImageFileName?$scope.user.profileImage="modules/users/client/img/profile/default.png":""!==Authentication.user.profileImageFileName&&($scope.user.profileImage="modules/users/client/img/profile/uploads/uploaded-profile-image.jpg"))}]}}),angular.module("core").directive("submitProjectDirective",function(){return{restrict:"E",templateUrl:"/modules/core/client/directives/views/submit-project-directive.html"}}),angular.module("core").service("ApiKeys",["$http",function($http){this.getApiKeys=function(){return $http.get("/api/v1/keys")},this.getTractData=function(){return $http.get("api/v1/tractData")}}]),angular.module("core").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("core").service("CensusDataService",["$http","ApiKeys",function($http,ApiKeys){var censusData=null,censusYear=[2e3,2010,2011,2012,2013,2014],population="";this.callCensusApi=function(){ApiKeys.getApiKeys().success(function(data){censusData(data.censusKey)}).error(function(data,status){alert("Failed to load Mapbox API key. Status: "+status)}),censusData=function(censusKey){return $http.get("http://api.census.gov/data/"+censusYear[1]+"/sf1?get="+population+"&for=tract:*&in=state:49+county:035&key="+censusKey)}}}]),angular.module("core").service("FullScreenService",[,function(){this.fullScreen=function(){}}]),angular.module("core").service("RandomMapService",[function(){var staticMap=null,maps={mapbox:{originalMap:"poetsrock.j5o1g9on",grayMap:"poetsrock.b06189bb",mainMap:"poetsrock.la999il2",topoMap:"poetsrock.la97f747",greenMap:"poetsrock.jdgpalp2",comic:"poetsrock.23d30eb5",fancyYouMap:"poetsrock.m6b73kk7",pencilMeInMap:"poetsrock.m6b7f6mj"}},url={mapbox:"http://api.tiles.mapbox.com/v4"},randomMap=[["mapbox",maps.mapbox.originalMap],["mapbox",maps.mapbox.grayMap],["mapbox",maps.mapbox.mainMap],["mapbox",maps.mapbox.topoMap],["mapbox",maps.mapbox.greenMap],["mapbox",maps.mapbox.comic],["mapbox",maps.mapbox.fancyYouMap],["mapbox",maps.mapbox.pencilMeInMap]],getRandomArbitrary=function(min,max){return Math.random()*(max-min)+min},randomLat=function(){var randomLngInt=Math.floor(getRandomArbitrary(111,113));if(111===randomLngInt)return"-111."+Math.floor(getRandomArbitrary(7840,9999));var randomDecimal=Math.floor(getRandomArbitrary(100,600));return"-112.0"+randomDecimal},randomLng=function(){return"40."+Math.floor(getRandomArbitrary(0,9999))},randomZoom=function(){return Math.floor(getRandomArbitrary(9,16))};this.getRandomMap=function(){var randomNum=Math.floor(getRandomArbitrary(0,7)),mapVendor=randomMap[randomNum][0],randomMapId=randomMap[randomNum][1];return"mapbox"===mapVendor?staticMap={mapUrl:url.mapbox+"/"+randomMapId+"/"+randomLat()+","+randomLng()+","+randomZoom()+"/1280x720.png32?access_token=pk.eyJ1IjoicG9ldHNyb2NrIiwiYSI6Imc1b245cjAifQ.vwb579x58Ma-CcnfQNamiw"}:void console.log("Error!\nrandomNum: ",randomNum,"\nmapVendor",mapVendor,"\nrandomMapId: ",randomMapId)}}]),angular.module("core").factory("googlePlacesService",["$http",function($http){}]),angular.module("core").factory("authInterceptor",["$q","$injector",function($q,$injector){return{responseError:function(rejection){if(!rejection.config.ignoreAuthModule)switch(rejection.status){case 401:$injector.get("$state").transitionTo("authentication.signin");break;case 403:$injector.get("$state").transitionTo("forbidden")}return $q.reject(rejection)}}}]),angular.module("core").service("mapService",[function($scope){this.featuredProjects=function(markerData){var featureProjectsArray=[];for(var prop in markerData){var i=0;if(2>i&&markerData[prop].featured){var featuredProject={thumb:markerData[prop].thumbnail,projectId:markerData[prop]._id,shortTitle:markerData[prop].shortTitle};featureProjectsArray.push(featuredProject)}i++}},this.markerColorFn=function(markerData,prop){return"video"===markerData[prop].category?"#ff0011":"multimedia"===markerData[prop].category?"#ff0101":"essay"===markerData[prop].category?"#0015ff":"literature"===markerData[prop].category?"#15ff35":"interview"===markerData[prop].category?"brown":"map"===markerData[prop].category?"yellow":"audio"===markerData[prop].category?"#111111":"#00ff44"}}]),angular.module("core").service("MarkerDataService",["$http",function($http){this.getMarkerData=function(){return $http.get("/api/v1/markerData").success(function(projects){}).error(function(error){console.log("marker data error: \n",error)})}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["user","admin"],this.menus={};var shouldRender=function(user){if(~this.roles.indexOf("*"))return!0;if(!user)return!1;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exist")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,options){return options=options||{},this.menus[menuId]={roles:options.roles||this.defaultRoles,items:options.items||[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,options){if(options=options||{},this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:options.title||"",state:options.state||"",type:options.type||"item","class":options["class"],roles:null===options.roles||"undefined"==typeof options.roles?this.defaultRoles:options.roles,position:options.position||0,items:[],shouldRender:shouldRender}),options.items)for(var i in options.items)this.addSubMenuItem(menuId,options.state,options.items[i]);return this.menus[menuId]},this.addSubMenuItem=function(menuId,parentItemState,options){options=options||{},this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===parentItemState&&this.menus[menuId].items[itemIndex].items.push({title:options.title||"",state:options.state||"",roles:null===options.roles||"undefined"==typeof options.roles?this.menus[menuId].items[itemIndex].roles:options.roles,position:options.position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemState){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===menuItemState&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemState){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].state===submenuItemState&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar",{roles:["*"]})}]),angular.module("core").service("Socket",["Authentication","$state","$timeout",function(Authentication,$state,$timeout){this.connect=function(){Authentication.user&&(this.socket=io())},this.connect(),this.on=function(eventName,callback){this.socket&&this.socket.on(eventName,function(data){$timeout(function(){callback(data)})})},this.emit=function(eventName,data){this.socket&&this.socket.emit(eventName,data)},this.removeListener=function(eventName){this.socket&&this.socket.removeListener(eventName)}}]),angular.module("core").factory("tractDataService",["$scope","ApiKeys",function($scope,ApiKeys){var dataBoxStaticPopup=null,censusTractData=null;ApiKeys.getTractData().success(function(tractData){tractDataLayer(tractData)}).error(function(tractData){alert("Failed to load tractData. Status: "+status)});var tractDataLayer=function(tractData){censusTractData=L.geoJson(tractData,{style:style,onEachFeature:function(feature,layer){if(feature.properties){var popupString='<div class="popup">';for(var k in feature.properties){var v=feature.properties[k];popupString+=k+": "+v+"<br />"}popupString+="</div>",layer.bindPopup(popupString)}layer instanceof L.Point||(layer.on("mouseover",function(){layer.setStyle(hoverStyle)}),layer.on("mouseout",function(){layer.setStyle(style)}))}})};$scope.dataBoxStaticPopupFn=function(dataBoxStaticPopup){function empty(){info.innerHTML="<div><strong>Click a marker</strong></div>"}dataBoxStaticPopup.on("mouseover",function(e){e.layer.closePopup();var feature=e.layer.feature,content="<div><strong>"+feature.properties.title+"</strong><p>"+feature.properties.description+"</p></div>";info.innerHTML=content}),map.on("move",empty),empty()},$scope.toggleCensusData=function(){$scope.censusDataTractLayer?(map.addLayer(censusTractData),map.addLayer(dataBoxStaticPopup)):(map.removeLayer(censusTractData),map.removeLayer(dataBoxStaticPopup))}}]),angular.module("core").factory("_",[function(){return window._}]),angular.module("core").service("UtilsService",["$http","$window",function($http,$window){this.cssLayout=function(){function onInputFocus(ev){classie.add(ev.target.parentNode,"input-filled")}function onInputBlur(ev){""===ev.target.value.trim()&&classie.remove(ev.target.parentNode,"input-filled")}[].slice.call(document.querySelectorAll("input.input_field")).forEach(function(inputEl){""!==inputEl.value.trim()&&classie.add(inputEl.parentNode,"input-filled"),inputEl.addEventListener("focus",onInputFocus),inputEl.addEventListener("blur",onInputBlur)})}}]),angular.module("users").config(["$httpProvider","LightboxProvider","$compileProvider",function($httpProvider,LightboxProvider,$compileProvider){$compileProvider.debugInfoEnabled(!1),$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}]),LightboxProvider.templateUrl="/modules/users/client/views/lightbox.html",LightboxProvider.calculateImageDimensionLimits=function(dimensions){return{maxWidth:dimensions.windowWidth>=768?dimensions.windowWidth-92:dimensions.windowWidth-52,maxHeight:1600}},LightboxProvider.calculateModalDimensions=function(dimensions){var width=Math.max(400,dimensions.imageDisplayWidth+32);return(width>=dimensions.windowWidth-20||dimensions.windowWidth<768)&&(width="auto"),{width:width,height:"auto"}}}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("settings",{"abstract":!0,url:"/settings",templateUrl:"modules/users/client/views/settings/settings.client.view.html",data:{authenticate:!0,roles:["user","registered","contributor","admin","superUser"]}}).state("settings.profile",{url:"/profile",templateUrl:"modules/users/client/views/settings/edit-profile.client.view.html"}).state("settings.password",{url:"/password",templateUrl:"modules/users/client/views/settings/change-password.client.view.html"}).state("settings.accounts",{url:"/accounts",templateUrl:"modules/users/client/views/settings/manage-social-accounts.client.view.html"}).state("settings.favorites",{url:"/favorites",templateUrl:"modules/users/client/views/settings/favorites.client.view.html"}).state("settings.submissions",{url:"/submissions",templateUrl:"modules/users/client/views/settings/submissions-list.client.view.html"}).state("settings.submissionsView",{url:"/:projectId/status/",templateUrl:"modules/users/client/views/settings/submissions-view.client.view.html"}).state("settings.picture",{url:"/picture",templateUrl:"modules/users/client/views/settings/change-profile-picture.client.view.html"}).state("authentication",{"abstract":!0,url:"/authentication",templateUrl:"modules/users/client/views/authentication/authentication.client.view.html"}).state("authentication.signup",{url:"/signup",templateUrl:"modules/users/client/views/authentication/signup.client.view.html"}).state("authentication.signin",{url:"/signin?err",templateUrl:"modules/users/client/views/authentication/signin.client.view.html"}).state("password",{"abstract":!0,url:"/password",template:"<ui-view/>"}).state("password.forgot",{url:"/forgot",templateUrl:"modules/users/client/views/password/forgot-password.client.view.html"}).state("password.reset",{"abstract":!0,url:"/reset",template:"<ui-view/>"}).state("password.reset.invalid",{url:"/invalid",templateUrl:"modules/users/client/views/password/reset-password-invalid.client.view.html"}).state("password.reset.success",{url:"/success",templateUrl:"modules/users/client/views/password/reset-password-success.client.view.html"}).state("password.reset.form",{url:"/:token",templateUrl:"modules/users/client/views/password/reset-password.client.view.html"}).state("contributors",{url:"/contributors",templateUrl:"modules/users/client/views/contributors/contributors.client.list.html"}).state("contributor",{url:"/contributors/:userId",templateUrl:"modules/users/client/views/contributors/contributors.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$state","$http","$location","$window","Authentication","PasswordValidator","$uibModal","UtilsService",function($scope,$state,$http,$location,$window,Authentication,PasswordValidator,$uibModal,UtilsService){$scope.authentication=Authentication,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.error=$location.search().err,UtilsService.cssLayout(),$scope.authentication.user&&$location.path("/"),$scope.signup=function(isValid){return $scope.error=null,isValid?void $http.post("/api/v1/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$state.go($state.previous.state.name||"home",$state.previous.params)}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","userForm"),!1)},$scope.signin=function(isValid){return $scope.error=null,isValid?void $http.post("/api/v1/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$state.go($state.previous.state.name||"home",$state.previous.params)}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","userForm"),!1)},$scope.callOauthProvider=function(url){$state.previous&&$state.previous.href&&(url+="?redirect_to="+encodeURIComponent($state.previous.href)),$window.location.href=url},$scope.goToSignUp=function($state){$state.go("signup")},$scope.modalOpenSignUp=function(){var isSwitched=!1;$uibModal.open({templateUrl:function(){return isSwitched?"modules/users/client/views/authentication/signin.client.view.html":(isSwitched=!1,"modules/users/client/views/authentication/signup.client.view.html")},size:"lg",backdropClass:"sign-in-modal-background",windowClass:"sign-in-modal-background",backdrop:!1,controller:function($scope){}}).then(function(){console.log("Success!!!!!")})}}]),angular.module("users").controller("ContributorController",["$scope","$animate","$location","Authentication","GetContributors","$stateParams","$http","$uibModal","$window","Lightbox","UtilsService","User","Projects",function($scope,$animate,$location,Authentication,GetContributors,$stateParams,$http,$uibModal,$window,Lightbox,UtilsService,User,Projects){$scope.contributors=null,$scope.contributor={},$scope.contributorProjects=[],$scope.contribData={},$scope.images=[],UtilsService.cssLayout(),$scope.openLightboxModal=function(index){Lightbox.openModal($scope.images,index)},$scope.init=function(){getContribData()};var getContribData=function(){GetContributors.contributors().success(function(contributorsData){return getImages(contributorsData),$scope.contributors=contributorsData,$scope.images}).error(function(errorData){console.log("errorData: ",errorData)})},getImages=function(contribData){for(var i=0;i<contribData.length;i++){var tempData={};tempData.url=contribData[i].profileImageURL,tempData.thumbUrl=contribData[i].profileImageThumbURL,tempData.caption=contribData[i].bio,$scope.images.push(tempData)}};$scope.findContributor=function(){User.get({userId:$stateParams.userId},function(userData){getAssociatedProjects(userData),$scope.contributor=userData})};var getAssociatedProjects=function(userObj){for(var i=0;i<userObj.associatedProjects.length;i++)Projects.get({projectId:userObj.associatedProjects[i]},function(projectObj){$scope.contributorProjects.push(projectObj)})};$scope.changeView=function(view){$location.path(view)}}]),angular.module("users").controller("GalleryController",["$scope","$stateParams","$location","Authentication","$http","$uibModal",function($scope,$stateParams,$location,Authentication,$http,$uibModal){var preventRunning=!1;$scope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){preventRunning||"/projects/create"===fromState.url&&"/projects/:projectId"!==toState.url&&(event.preventDefault(),$uibModal.open({templateUrl:"/modules/projects/directives/views/modal.html",controller:function($scope,$modalInstance){$scope.closeMe=function(){$modalInstance.dismiss(function(reason){console.log(reason)})},$scope.leave=function(){preventRunning=!0,
$scope.closeMe(),$location.path(toState)}},size:"lg"}))})}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication","PasswordValidator",function($scope,$stateParams,$http,$location,Authentication,PasswordValidator){$scope.authentication=Authentication,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/v1/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","forgotPasswordForm"),!1)},$scope.resetUserPassword=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/v1/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","resetPasswordForm"),!1)}}]),angular.module("users").controller("ChangePasswordController",["$scope","$http","Authentication","PasswordValidator",function($scope,$http,Authentication,PasswordValidator){$scope.user=Authentication.user,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.changeUserPassword=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/v1/users/password",$scope.passwordDetails).success(function(response){$scope.$broadcast("show-errors-reset","passwordForm"),$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","passwordForm"),!1)}}]),angular.module("users").controller("ChangeProfilePictureController",["$scope","$timeout","$window","Authentication","Upload","$http","ProfileImageService",function($scope,$timeout,$window,Authentication,Upload,$http,ProfileImageService){$scope.init=function(){ProfileImageService.getUploadedProfilePic()},$scope.user=Authentication.user,$scope.uploading=!1;var upload=null;$scope.onFileSelect=function(files){$scope.uploading=!0,console.log("files:\n",files[0]),console.log("files:\n",files[0].File);var fileType=files[0].type;"image/jpeg"===fileType?fileType=".jpg":"image/png"===fileType&&(fileType=".png");var fileName="",requestType="profile-image";"profile-image"===requestType&&(fileName={origFileName:files[0].name.replace(/\s/g,"_"),fileName:"uploaded-profile-image"+fileType});var query={user:$scope.user,fileName:fileName.fileName,origFileName:fileName.origFileName,type:files[0].type};console.log("fileType:\n",fileType),console.log("query:\n",query),$http.post("api/v1/s3/upload/media/photo",query).then(function(result){console.log("result:\n",result),console.log("result.data:\n",result.data),console.log("result.status:\n",result.status),console.log("result.config:\n",result.config),upload=Upload.upload({url:result.config.url,file:files[0],method:"POST"}).then(function(resp){console.log("resp:\n",resp);var s3Result=xmlToJSON.parseString(resp.data);console.log("file "+resp.config.data.file.name+"is uploaded successfully. Response: "+s3Result),console.log("status: ",resp.status),$scope.uploading=!1,ProfileImageService.getUploadedProfilePic()},function(resp){},function(evt){console.log("evt:\n",evt),console.log("progress: "+parseInt(100*evt.loaded/evt.total)+"% file :"+evt.config.data.file.name)})})},$scope.abort=function(){console.log("abort!!!"),upload.abort(),$scope.uploading=!1},$scope.getProfilePic=function(){}}]),angular.module("users").controller("EditProfileController",["$scope","$http","$location","Users","UserData","$stateParams","Authentication","AdminAuthService","UtilsService",function($scope,$http,$location,Users,UserData,$stateParams,Authentication,AdminAuthService,UtilsService){$scope.user=Authentication.user,$scope.isAdmin=AdminAuthService,console.log("\n\n$scope.user:\n",$scope.user,"\n\n"),UtilsService.cssLayout(),$scope.updateUserProfile=function(isValid){if($scope.success=$scope.error=null,!isValid)return $scope.$broadcast("show-errors-check-validity","userForm"),!1;var user=new Users($scope.user);user.$update(function(response){$scope.$broadcast("show-errors-reset","userForm"),$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})},$scope.update=function(isValid){if($scope.error=null,!isValid)return $scope.$broadcast("show-errors-check-validity","userAdminForm"),!1;var userToEdit=$scope.userToEdit;userToEdit.$update(function(){$location.path("users/"+user._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.toggleEdit=!1,$scope.toggleId=0,$scope.toggleEditFn=function(editNum){$scope.toggleEdit=!$scope.toggle,$scope.toggleId=editNum},$scope.find=function(){$scope.users=Users.query()},$scope.find=function(){$scope.users=Users.query($scope.query)},$scope.findOne=function(){$scope.userToEdit=UserData.get({userId:$stateParams.userId})}}]),angular.module("users").controller("SocialAccountsController",["$scope","$http","Authentication",function($scope,$http,Authentication){$scope.user=Authentication.user,$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/api/v1/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","Authentication",function($scope,Authentication){$scope.user=Authentication.user}]),angular.module("users").controller("UserController",["$scope","$state","$stateParams","Authentication","UserData","Users","ProfileImageService","$http","$resource","Newsletter",function($scope,$state,$stateParams,Authentication,UserData,Users,ProfileImageService,$http,$resource,Newsletter){$scope.user=Authentication.user;$scope.user.favorites,$scope.user.associatedProjects;$scope.update=function(isValid){return isValid?void user.$update(function(){$state.go("admin.user",{userId:user._id})},function(errorResponse){$scope.error=errorResponse.data.message}):($scope.$broadcast("show-errors-check-validity","userForm"),!1)},$scope.remove=function(user){confirm("Are you sure you want to delete this user?")&&(user?(user.$remove(),$scope.users.splice($scope.users.indexOf(user),1)):$scope.user.$remove(function(){$state.go("admin.users")}))},$scope.find=function(){$scope.users=Users.query($scope.query),ProfileImageService.getUploadedProfilePic()},$scope.findOne=function(){$scope.user=UserData.get({userId:$stateParams.userId||$scope.user.userId}),console.log("$scope.users: ",$scope.users)},$scope.newsletterSubscription=function(isValid){return $scope.error=null,isValid?void($scope.users=Newsletter.query({email:$scope.subscribe.newsletter})):void $scope.$broadcast("show-errors-check-validity","userForm")},$scope.removeFavProject=function(projectId){$scope.$on("$stateChangeStart",function(event){event.preventDefault(),console.log("kill that fav!",projectId),console.log("kill that fav!",$scope.user),$scope.isFavorite=!1;var updateFavoriteObj={favorite:projectId,isFavorite:!1};$http.put("/api/v1/users/"+$scope.user._id,updateFavoriteObj)})}}]),angular.module("users").directive("passwordValidator",["PasswordValidator",function(PasswordValidator){return{require:"ngModel",link:function(scope,element,attrs,ngModel){ngModel.$validators.requirements=function(password){var status=!0;if(password){var result=PasswordValidator.getResult(password),requirementsIdx=0,requirementsMeter=[{color:"danger",progress:"20"},{color:"warning",progress:"40"},{color:"info",progress:"60"},{color:"primary",progress:"80"},{color:"success",progress:"100"}];result.errors.length<requirementsMeter.length&&(requirementsIdx=requirementsMeter.length-result.errors.length-1),scope.requirementsColor=requirementsMeter[requirementsIdx].color,scope.requirementsProgress=requirementsMeter[requirementsIdx].progress,result.errors.length?(scope.popoverMsg=PasswordValidator.getPopoverMsg(),scope.passwordErrors=result.errors,status=!1):(scope.popoverMsg="",scope.passwordErrors=[],status=!0)}return status}}}}]),angular.module("users").directive("passwordVerify",[function(){return{require:"ngModel",scope:{passwordVerify:"="},link:function(scope,element,attrs,ngModel){scope.$watch(function(){var combined;return(scope.passwordVerify||ngModel)&&(combined=scope.passwordVerify+"_"+ngModel),combined},function(value){value&&(ngModel.$validators.passwordVerify=function(password){var origin=scope.passwordVerify;return origin!==password?!1:!0})})}}}]),angular.module("users").directive("userSubmissionsView",function(){return{restrict:"EA",templateUrl:"modules/users/client/directives/views/user-submissions-list.html",controller:["$scope","Projects",function($scope,Projects){$scope.findCurrentUserSubmissions=function(){var associatedProjects=$scope.user.associatedProjects,userProjects=[],getProjects=function(associatedProjects){return associatedProjects.forEach(function(associatedProject){userProjects.push(Projects.get({projectId:associatedProject}))}),userProjects};$scope.userProjects=$scope.user.projects=getProjects(associatedProjects)}}]}}),angular.module("users").directive("lowercase",function(){return{require:"ngModel",link:function(scope,element,attrs,modelCtrl){modelCtrl.$parsers.push(function(input){return input?input.toLowerCase():""}),element.css("text-transform","lowercase")}}}),angular.module("users").service("GetContributors",["$http",function($http){this.contributors=function(){return $http.get("/api/v1/contributors")}}]),angular.module("users").service("ProfileImageService",["$http","Authentication",function($http,Authentication){console.log("uploader working for profilePic Service");var user=Authentication.user;this.getUploadedProfilePic=function(){var configObj={cache:!0};$http.get("api/v1/users/"+user._id+"/media/uploadedProfileImage/"+user.profileImageFileName,configObj).then(function successCallback(successCallback){console.log("profilePic",successCallback),user.profileImage="modules/users/client/img/profile/uploads/uploaded-profile-image.jpg"},function errorCallback(errorCallback){console.log("profile photo error",errorCallback),user.profileImage="modules/users/client/img/profile/default.png"})}}]),angular.module("users").factory("AdminAuthService",["$window","Authentication",function($window,Authentication){if(""!==Authentication.user){var isAdmin={user:$window.user.roles[0]};return console.log("isAdmin.user",isAdmin.user),isAdmin}return isAdmin={user:"notAdmin"},console.log("!isAdmin.user",isAdmin.user),isAdmin}]),angular.module("users").factory("Authentication",["$window",function($window){var auth={user:$window.user};return auth}]),angular.module("users").factory("PasswordValidator",["$window",function($window){var owaspPasswordStrengthTest=$window.owaspPasswordStrengthTest;return{getResult:function(password){var result=owaspPasswordStrengthTest.test(password);return result},getPopoverMsg:function(){var popoverMsg="Please enter a passphrase or password with greater than 10 characters, numbers, lowercase, upppercase, and special characters.";return popoverMsg}}}]),angular.module("users").service("SubscribeService",[function($scope,$location,Projects,$stateParams){$scope.update=function(){var project=$scope.project;project.$update(function(){$location.path("projects/"+project._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.projects=Projects.query()},$scope.findOne=function(){$scope.project=Projects.get({projectId:$stateParams.projectId})},$scope.completed=function(){var formField;for(formField in $scope.createProject){if(null===$scope.createProject)return $scope.completed=!1,$scope.completed;$scope.completed=!0}},$scope.create=function(){new Projects({created:this.created,createdBy:this.createdBy,street:this.street,city:this.city,state:this.state,zip:this.zip,story:this.story,title:this.title})}}]),angular.module("users").factory("UserData",["$resource",function($resource){return $resource("/api/v1/users/:userId",{userId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("/api/v1/users",{},{update:{method:"PUT"}})}]),angular.module("users").factory("User",["$resource","AdminAuthService",function($resource,AdminAuthService){return"admin"===AdminAuthService.user?$resource("api/v1/user/:userId",{userId:"@_id"},{update:{method:"PUT"}},{create:{method:"POST"}},{read:{method:"GET"}}):$resource("api/v1/users/:userId",{userId:"@_id"},{update:{method:"GET"}})}]),angular.module("users").factory("AdminUpdateUser",["$resource","AdminAuthService",function($resource,AdminAuthService){return"admin"===AdminAuthService.user?$resource("api/v1/users/:userId",{userId:"@_id"},{update:{method:"PUT"}},{create:{method:"POST"}},{read:{method:"GET"}}):"error - user is not admin"}]),angular.module("users").factory("Newsletter",["$resource",function($resource){return $resource("api/v1/newsletter",{email:"@email"},{update:{method:"PUT"}},{create:{method:"POST"}},{read:{method:"GET"}})}]);